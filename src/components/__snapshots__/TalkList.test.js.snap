exports[`TalkList component should renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="TalkList">
    <Tabs
        initialSelectedIndex={0}
        inkBarStyle={
            Object {
                "backgroundColor": "white",
              }
        }
        onChange={[Function]}
        tabItemContainerStyle={
            Object {
                "backgroundColor": "#ef5350",
              }
        }>
        <Tab
            label="All (3)"
            value={null} />
        <Tab
            label="PK (1)"
            value="PK" />
        <Tab
            label="LT (undefined)"
            value="LT" />
    </Tabs>
    <div
        style={
            Object {
                "padding": "0 16px",
              }
        }>
        <SelectField
            autoWidth={false}
            disabled={false}
            floatingLabelText="Trier par"
            fullWidth={false}
            onChange={[Function]}
            style={
                Object {
                    "width": "100%",
                  }
            }
            value={undefined}>
            <MenuItem
                checked={false}
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                primaryText="Date"
                value="date" />
            <MenuItem
                checked={false}
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                primaryText="Note"
                value="note" />
        </SelectField>
    </div>
    <SelectableList>
        <ListItem
            autoGenerateNestedIndicator={true}
            disableKeyboardFocus={false}
            disabled={false}
            initiallyOpen={false}
            insetChildren={false}
            leftAvatar={
                <Avatar
                    backgroundColor="#ff9800"
                    size={40}>
                    LT
                </Avatar>
            }
            nestedItems={Array []}
            nestedLevel={0}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onNestedListToggle={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            onTouchTap={[Function]}
            open={null}
            primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
            primaryTogglesNestedList={false}
            rightIcon={<span />}
            secondaryText="Alexandra Janin"
            secondaryTextLines={1}
            value={0} />
        <ListItem
            autoGenerateNestedIndicator={true}
            disableKeyboardFocus={false}
            disabled={false}
            initiallyOpen={false}
            insetChildren={false}
            leftAvatar={
                <Avatar
                    backgroundColor="#009688"
                    size={40}>
                    PK
                </Avatar>
            }
            nestedItems={Array []}
            nestedLevel={0}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onNestedListToggle={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            onTouchTap={[Function]}
            open={null}
            primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
            primaryTogglesNestedList={false}
            rightIcon={<span />}
            secondaryText="Alexandra Janin"
            secondaryTextLines={1}
            value={1} />
        <ListItem
            autoGenerateNestedIndicator={true}
            disableKeyboardFocus={false}
            disabled={false}
            initiallyOpen={false}
            insetChildren={false}
            leftAvatar={null}
            nestedItems={Array []}
            nestedLevel={0}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onNestedListToggle={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            onTouchTap={[Function]}
            open={null}
            primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
            primaryTogglesNestedList={false}
            rightIcon={<span />}
            secondaryText="Alexandra Janin"
            secondaryTextLines={1}
            value={2} />
    </SelectableList>
</div>,
  "nodes": Array [
    <div
      className="TalkList">
      <Tabs
            initialSelectedIndex={0}
            inkBarStyle={
                  Object {
                        "backgroundColor": "white",
                      }
            }
            onChange={[Function]}
            tabItemContainerStyle={
                  Object {
                        "backgroundColor": "#ef5350",
                      }
            }>
            <Tab
                  label="All (3)"
                  value={null} />
            <Tab
                  label="PK (1)"
                  value="PK" />
            <Tab
                  label="LT (undefined)"
                  value="LT" />
      </Tabs>
      <div
            style={
                  Object {
                        "padding": "0 16px",
                      }
            }>
            <SelectField
                  autoWidth={false}
                  disabled={false}
                  floatingLabelText="Trier par"
                  fullWidth={false}
                  onChange={[Function]}
                  style={
                        Object {
                              "width": "100%",
                            }
                  }
                  value={undefined}>
                  <MenuItem
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Date"
                        value="date" />
                  <MenuItem
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Note"
                        value="note" />
            </SelectField>
      </div>
      <SelectableList>
            <ListItem
                  autoGenerateNestedIndicator={true}
                  disableKeyboardFocus={false}
                  disabled={false}
                  initiallyOpen={false}
                  insetChildren={false}
                  leftAvatar={
                        <Avatar
                              backgroundColor="#ff9800"
                              size={40}>
                              LT
                        </Avatar>
                  }
                  nestedItems={Array []}
                  nestedLevel={0}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onNestedListToggle={[Function]}
                  onTouchEnd={[Function]}
                  onTouchStart={[Function]}
                  onTouchTap={[Function]}
                  open={null}
                  primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                  primaryTogglesNestedList={false}
                  rightIcon={<span />}
                  secondaryText="Alexandra Janin"
                  secondaryTextLines={1}
                  value={0} />
            <ListItem
                  autoGenerateNestedIndicator={true}
                  disableKeyboardFocus={false}
                  disabled={false}
                  initiallyOpen={false}
                  insetChildren={false}
                  leftAvatar={
                        <Avatar
                              backgroundColor="#009688"
                              size={40}>
                              PK
                        </Avatar>
                  }
                  nestedItems={Array []}
                  nestedLevel={0}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onNestedListToggle={[Function]}
                  onTouchEnd={[Function]}
                  onTouchStart={[Function]}
                  onTouchTap={[Function]}
                  open={null}
                  primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                  primaryTogglesNestedList={false}
                  rightIcon={<span />}
                  secondaryText="Alexandra Janin"
                  secondaryTextLines={1}
                  value={1} />
            <ListItem
                  autoGenerateNestedIndicator={true}
                  disableKeyboardFocus={false}
                  disabled={false}
                  initiallyOpen={false}
                  insetChildren={false}
                  leftAvatar={null}
                  nestedItems={Array []}
                  nestedLevel={0}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onNestedListToggle={[Function]}
                  onTouchEnd={[Function]}
                  onTouchStart={[Function]}
                  onTouchTap={[Function]}
                  open={null}
                  primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                  primaryTogglesNestedList={false}
                  rightIcon={<span />}
                  secondaryText="Alexandra Janin"
                  secondaryTextLines={1}
                  value={2} />
      </SelectableList>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <TalkList
        count={
                Object {
                        "PK": 1,
                        "all": 3,
                      }
        }
        notes={
                Array [
                        Object {
                          "total": 1,
                          "values": Object {
                            "A": 1,
                            "B": 0,
                            "C": 0,
                          },
                        },
                        Object {
                          "total": 1,
                          "values": Object {
                            "A": 1,
                            "B": 0,
                            "C": 0,
                          },
                        },
                        Object {
                          "total": 0,
                          "values": Object {
                            "A": 0,
                            "B": 0,
                            "C": 0,
                          },
                        },
                      ]
        }
        selectTalk={[Function]}
        selectedTalk={0}
        setFilter={[Function]}
        sortTalks={[Function]}
        talks={
                Array [
                        Object {
                          "formats": "Lightning Talk : 5 minutes",
                          "prenom_et_nom": "Alexandra Janin",
                          "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
                        },
                        Object {
                          "formats": "Pecha Kucha : 20 images x 20 secondes",
                          "prenom_et_nom": "Alexandra Janin",
                          "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
                        },
                        Object {
                          "prenom_et_nom": "Alexandra Janin",
                          "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
                        },
                      ]
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": TalkList {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "count": Object {
            "PK": 1,
            "all": 3,
          },
          "notes": Array [
            Object {
              "total": 1,
              "values": Object {
                "A": 1,
                "B": 0,
                "C": 0,
              },
            },
            Object {
              "total": 1,
              "values": Object {
                "A": 1,
                "B": 0,
                "C": 0,
              },
            },
            Object {
              "total": 0,
              "values": Object {
                "A": 0,
                "B": 0,
                "C": 0,
              },
            },
          ],
          "selectTalk": [Function],
          "selectedTalk": 0,
          "setFilter": [Function],
          "sortTalks": [Function],
          "talks": Array [
            Object {
              "formats": "Lightning Talk : 5 minutes",
              "prenom_et_nom": "Alexandra Janin",
              "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
            },
            Object {
              "formats": "Pecha Kucha : 20 images x 20 secondes",
              "prenom_et_nom": "Alexandra Janin",
              "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
            },
            Object {
              "prenom_et_nom": "Alexandra Janin",
              "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="TalkList">
          <Tabs
                    initialSelectedIndex={0}
                    inkBarStyle={
                              Object {
                                        "backgroundColor": "white",
                                      }
                    }
                    onChange={[Function]}
                    tabItemContainerStyle={
                              Object {
                                        "backgroundColor": "#ef5350",
                                      }
                    }>
                    <Tab
                              label="All (3)"
                              value={null} />
                    <Tab
                              label="PK (1)"
                              value="PK" />
                    <Tab
                              label="LT (undefined)"
                              value="LT" />
          </Tabs>
          <div
                    style={
                              Object {
                                        "padding": "0 16px",
                                      }
                    }>
                    <SelectField
                              autoWidth={false}
                              disabled={false}
                              floatingLabelText="Trier par"
                              fullWidth={false}
                              onChange={[Function]}
                              style={
                                        Object {
                                                  "width": "100%",
                                                }
                              }
                              value={undefined}>
                              <MenuItem
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Date"
                                        value="date" />
                              <MenuItem
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Note"
                                        value="note" />
                    </SelectField>
          </div>
          <SelectableList>
                    <ListItem
                              autoGenerateNestedIndicator={true}
                              disableKeyboardFocus={false}
                              disabled={false}
                              initiallyOpen={false}
                              insetChildren={false}
                              leftAvatar={
                                        <Avatar
                                                  backgroundColor="#ff9800"
                                                  size={40}>
                                                  LT
                                        </Avatar>
                              }
                              nestedItems={Array []}
                              nestedLevel={0}
                              onKeyboardFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onNestedListToggle={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              onTouchTap={[Function]}
                              open={null}
                              primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                              primaryTogglesNestedList={false}
                              rightIcon={<span />}
                              secondaryText="Alexandra Janin"
                              secondaryTextLines={1}
                              value={0} />
                    <ListItem
                              autoGenerateNestedIndicator={true}
                              disableKeyboardFocus={false}
                              disabled={false}
                              initiallyOpen={false}
                              insetChildren={false}
                              leftAvatar={
                                        <Avatar
                                                  backgroundColor="#009688"
                                                  size={40}>
                                                  PK
                                        </Avatar>
                              }
                              nestedItems={Array []}
                              nestedLevel={0}
                              onKeyboardFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onNestedListToggle={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              onTouchTap={[Function]}
                              open={null}
                              primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                              primaryTogglesNestedList={false}
                              rightIcon={<span />}
                              secondaryText="Alexandra Janin"
                              secondaryTextLines={1}
                              value={1} />
                    <ListItem
                              autoGenerateNestedIndicator={true}
                              disableKeyboardFocus={false}
                              disabled={false}
                              initiallyOpen={false}
                              insetChildren={false}
                              leftAvatar={null}
                              nestedItems={Array []}
                              nestedLevel={0}
                              onKeyboardFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onNestedListToggle={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              onTouchTap={[Function]}
                              open={null}
                              primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                              primaryTogglesNestedList={false}
                              rightIcon={<span />}
                              secondaryText="Alexandra Janin"
                              secondaryTextLines={1}
                              value={2} />
          </SelectableList>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="TalkList">
          <Tabs
                    initialSelectedIndex={0}
                    inkBarStyle={
                              Object {
                                        "backgroundColor": "white",
                                      }
                    }
                    onChange={[Function]}
                    tabItemContainerStyle={
                              Object {
                                        "backgroundColor": "#ef5350",
                                      }
                    }>
                    <Tab
                              label="All (3)"
                              value={null} />
                    <Tab
                              label="PK (1)"
                              value="PK" />
                    <Tab
                              label="LT (undefined)"
                              value="LT" />
          </Tabs>
          <div
                    style={
                              Object {
                                        "padding": "0 16px",
                                      }
                    }>
                    <SelectField
                              autoWidth={false}
                              disabled={false}
                              floatingLabelText="Trier par"
                              fullWidth={false}
                              onChange={[Function]}
                              style={
                                        Object {
                                                  "width": "100%",
                                                }
                              }
                              value={undefined}>
                              <MenuItem
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Date"
                                        value="date" />
                              <MenuItem
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Note"
                                        value="note" />
                    </SelectField>
          </div>
          <SelectableList>
                    <ListItem
                              autoGenerateNestedIndicator={true}
                              disableKeyboardFocus={false}
                              disabled={false}
                              initiallyOpen={false}
                              insetChildren={false}
                              leftAvatar={
                                        <Avatar
                                                  backgroundColor="#ff9800"
                                                  size={40}>
                                                  LT
                                        </Avatar>
                              }
                              nestedItems={Array []}
                              nestedLevel={0}
                              onKeyboardFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onNestedListToggle={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              onTouchTap={[Function]}
                              open={null}
                              primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                              primaryTogglesNestedList={false}
                              rightIcon={<span />}
                              secondaryText="Alexandra Janin"
                              secondaryTextLines={1}
                              value={0} />
                    <ListItem
                              autoGenerateNestedIndicator={true}
                              disableKeyboardFocus={false}
                              disabled={false}
                              initiallyOpen={false}
                              insetChildren={false}
                              leftAvatar={
                                        <Avatar
                                                  backgroundColor="#009688"
                                                  size={40}>
                                                  PK
                                        </Avatar>
                              }
                              nestedItems={Array []}
                              nestedLevel={0}
                              onKeyboardFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onNestedListToggle={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              onTouchTap={[Function]}
                              open={null}
                              primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                              primaryTogglesNestedList={false}
                              rightIcon={<span />}
                              secondaryText="Alexandra Janin"
                              secondaryTextLines={1}
                              value={1} />
                    <ListItem
                              autoGenerateNestedIndicator={true}
                              disableKeyboardFocus={false}
                              disabled={false}
                              initiallyOpen={false}
                              insetChildren={false}
                              leftAvatar={null}
                              nestedItems={Array []}
                              nestedLevel={0}
                              onKeyboardFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onNestedListToggle={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              onTouchTap={[Function]}
                              open={null}
                              primaryText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse."
                              primaryTogglesNestedList={false}
                              rightIcon={<span />}
                              secondaryText="Alexandra Janin"
                              secondaryTextLines={1}
                              value={2} />
          </SelectableList>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <TalkList
    count={
        Object {
            "PK": 1,
            "all": 3,
          }
    }
    notes={
        Array [
            Object {
              "total": 1,
              "values": Object {
                "A": 1,
                "B": 0,
                "C": 0,
              },
            },
            Object {
              "total": 1,
              "values": Object {
                "A": 1,
                "B": 0,
                "C": 0,
              },
            },
            Object {
              "total": 0,
              "values": Object {
                "A": 0,
                "B": 0,
                "C": 0,
              },
            },
          ]
    }
    selectTalk={[Function]}
    selectedTalk={0}
    setFilter={[Function]}
    sortTalks={[Function]}
    talks={
        Array [
            Object {
              "formats": "Lightning Talk : 5 minutes",
              "prenom_et_nom": "Alexandra Janin",
              "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
            },
            Object {
              "formats": "Pecha Kucha : 20 images x 20 secondes",
              "prenom_et_nom": "Alexandra Janin",
              "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
            },
            Object {
              "prenom_et_nom": "Alexandra Janin",
              "titre_de_ta_presentation": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, esse.",
            },
          ]
    } />,
}
`;
